
package healthMonitoringSystem;


import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;
import com.mysql.jdbc.Connection;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Khian Orland Juan
 */

public final class HMS_EMPLOYEE_DELETE extends javax.swing.JFrame {

    /**
     * Creates new form HMS_EMPLOYEE_REGISTRATION
     */
    public static JLabel confirmLabelText;
    public static JPanel confirmPanel;
    String image_path = null;
    
    public HMS_EMPLOYEE_DELETE() {
        

       
        initComponents();
        topBannerPanel.invalidate();
        topBannerPanel.validate();
        topBannerPanel.repaint();
        
        Date dateNow = new Date();
        System.out.println(dateNow);
        
        showDate();
        showTime();
        
    }
     void showDate() {
            Date date = new Date();
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd");
            dateLabel.setText(simpleDateFormat.format(date));
         }
        
        void showTime() {
        new Timer (0, new ActionListener() {
           
           @Override
           public void actionPerformed(ActionEvent e) {
               Date date = new Date();
               SimpleDateFormat simpleDateFormat = new SimpleDateFormat("hh:mm:ss a");
               timeLabel.setText(simpleDateFormat.format(date));
           }
        }).start();
        }

    // limit phone number max
       public class JTextFieldLimit extends PlainDocument {
        private final int limit;

        JTextFieldLimit(int limit) {
         super();
         this.limit = limit;
         }

        @Override
        public void insertString( int offset, String  str, AttributeSet attr ) throws BadLocationException {
          if (str == null) return;

          if ((getLength() + str.length()) <= limit) {
            super.insertString(offset, str, attr);
          }
        }
      }
       
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jButton1 = new javax.swing.JButton();
        topBannerPanel = new javax.swing.JPanel();
        employeeRagistrationImageLabel = new javax.swing.JLabel();
        employeeLastNameTf = new javax.swing.JTextField();
        employeeMiddleInitialTf = new javax.swing.JTextField();
        employeeFirstNameTf = new javax.swing.JTextField();
        fullNameLabel = new javax.swing.JLabel();
        employeeHomeAddressTA_ = new javax.swing.JScrollPane();
        employeeHomeAddressTA = new javax.swing.JTextArea();
        homeAddressLabel = new javax.swing.JLabel();
        employeePhoneNumberTf = new javax.swing.JTextField();
        nationalityTf = new javax.swing.JTextField();
        nationalityLabel = new javax.swing.JLabel();
        religionChoice = new java.awt.Choice();
        religionLabel = new javax.swing.JLabel();
        dateOfBirthLabel = new javax.swing.JLabel();
        sexLabel = new javax.swing.JLabel();
        bloodTypeLabel = new javax.swing.JLabel();
        bloodTypeChoice = new java.awt.Choice();
        civilStatusChoice = new java.awt.Choice();
        civilStatusLabel = new javax.swing.JLabel();
        employeePhoneNumberLabel = new javax.swing.JLabel();
        fatherEmailAddressLabel = new javax.swing.JLabel();
        fatherEmailAddressTf = new javax.swing.JTextField();
        motherEmailAddressLabel = new javax.swing.JLabel();
        motherEmailAddressTf = new javax.swing.JTextField();
        employeeImagePathLabel = new javax.swing.JLabel();
        selectImageButton = new javax.swing.JButton();
        imagePathLabel = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        deleteEmployeeButton = new javax.swing.JButton();
        bottomPanel = new javax.swing.JPanel();
        dateLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        resetAllFieldsButton = new javax.swing.JButton();
        onScreenKeyboardButton = new javax.swing.JButton();
        employeeIDNumberLabel = new javax.swing.JLabel();
        employeeIdTf = new javax.swing.JTextField();
        searchEmployeeButton = new javax.swing.JButton();
        firstNameLabel = new javax.swing.JLabel();
        middleNameLabel = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        sexTf = new javax.swing.JTextField();
        displayedBirthday = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Update Employee Data");
        setBackground(new java.awt.Color(235, 241, 253));
        setMinimumSize(new java.awt.Dimension(1000, 720));
        setName("hmsEmployeeRegistrationFrame"); // NOI18N
        setResizable(false);

        topBannerPanel.setBackground(new java.awt.Color(235, 241, 253));
        topBannerPanel.setMaximumSize(new java.awt.Dimension(1000, 629));
        topBannerPanel.setMinimumSize(new java.awt.Dimension(1000, 629));
        topBannerPanel.setPreferredSize(new java.awt.Dimension(1000, 629));

        employeeRagistrationImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/healthMonitoringSystem/APP_IMAGES/mainprogram/HMS_TOPPANEL_DELETEMPLOYEE_fit.png"))); // NOI18N
        employeeRagistrationImageLabel.setBackground(new java.awt.Color(235, 241, 253));

        employeeLastNameTf.setEditable(false);
        employeeLastNameTf.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        employeeLastNameTf.setBackground(new java.awt.Color(204, 204, 255));
        employeeLastNameTf.setToolTipText("Complete Last Name");
        employeeLastNameTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                employeeLastNameTfKeyPressed(evt);
            }
        });

        employeeMiddleInitialTf.setEditable(false);
        employeeMiddleInitialTf.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        employeeMiddleInitialTf.setBackground(new java.awt.Color(204, 204, 255));
        employeeMiddleInitialTf.setToolTipText("Middle Initial or Complete Middle Name");
        employeeMiddleInitialTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                employeeMiddleInitialTfKeyPressed(evt);
            }
        });

        employeeFirstNameTf.setEditable(false);
        employeeFirstNameTf.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        employeeFirstNameTf.setBackground(new java.awt.Color(204, 204, 255));
        employeeFirstNameTf.setToolTipText("First name of the Employee");
        employeeFirstNameTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                employeeFirstNameTfKeyPressed(evt);
            }
        });

        fullNameLabel.setText("Full Name:");
        fullNameLabel.setBackground(new java.awt.Color(255, 255, 255));
        fullNameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        employeeHomeAddressTA.setColumns(20);
        employeeHomeAddressTA.setEditable(false);
        employeeHomeAddressTA.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        employeeHomeAddressTA.setLineWrap(true);
        employeeHomeAddressTA.setRows(5);
        employeeHomeAddressTA.setWrapStyleWord(true);
        employeeHomeAddressTA.setBackground(new java.awt.Color(204, 204, 255));
        employeeHomeAddressTA.setToolTipText("Complete Address of the Employee...");
        employeeHomeAddressTA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                employeeHomeAddressTAKeyPressed(evt);
            }
        });
        employeeHomeAddressTA_.setViewportView(employeeHomeAddressTA);

        homeAddressLabel.setText("Home Address:");
        homeAddressLabel.setBackground(new java.awt.Color(255, 255, 255));
        homeAddressLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        employeePhoneNumberTf.setEditable(false);
        employeePhoneNumberTf.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        employeePhoneNumberTf.setBackground(new java.awt.Color(204, 204, 255));
        employeePhoneNumberTf.setToolTipText("Please indicate your Phone number starting at 09xxxxxxxx");
        employeePhoneNumberTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeePhoneNumberTfActionPerformed(evt);
            }
        });
        employeePhoneNumberTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                employeePhoneNumberTfKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                employeePhoneNumberTfKeyTyped(evt);
            }
        });
        employeePhoneNumberTf.setDocument(new JTextFieldLimit(11));

        nationalityTf.setEditable(false);
        nationalityTf.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        nationalityTf.setBackground(new java.awt.Color(204, 204, 255));
        nationalityTf.setToolTipText("Please indicate your Nationality (ex. Filipino)");
        nationalityTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nationalityTfKeyPressed(evt);
            }
        });
        employeePhoneNumberTf.setDocument(new JTextFieldLimit(11));

        nationalityLabel.setText("Nationality:");
        nationalityLabel.setBackground(new java.awt.Color(255, 255, 255));
        nationalityLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        religionChoice.setBackground(new java.awt.Color(204, 204, 255));
        religionChoice.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        religionChoice.setEnabled(false);
        religionChoice.add("Unspecified");
        religionChoice.add("Catholic");
        religionChoice.add("Islam");
        religionChoice.add("Judaism");
        religionChoice.add("Hinduism");
        religionChoice.add("Buddhism");
        religionChoice.add("Iglesia ni Cristo");
        religionChoice.add("Non-Roman Catholic and Protestant");
        religionChoice.add("Aglipayan");
        religionChoice.add("Seventh-day Adventist");

        religionLabel.setText("Religion:");
        religionLabel.setBackground(new java.awt.Color(255, 255, 255));
        religionLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        dateOfBirthLabel.setText("Birthday:");
        dateOfBirthLabel.setBackground(new java.awt.Color(255, 255, 255));
        dateOfBirthLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        sexLabel.setText("Sex:");
        sexLabel.setBackground(new java.awt.Color(255, 255, 255));
        sexLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        bloodTypeLabel.setText("Blood Type:");
        bloodTypeLabel.setBackground(new java.awt.Color(255, 255, 255));
        bloodTypeLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        bloodTypeChoice.setBackground(new java.awt.Color(204, 204, 255));
        bloodTypeChoice.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        bloodTypeChoice.setEnabled(false);
        bloodTypeChoice.add("Unspecified");
        bloodTypeChoice.add("A+");
        bloodTypeChoice.add("A-");
        bloodTypeChoice.add("B+");
        bloodTypeChoice.add("B-");
        bloodTypeChoice.add("AB+");
        bloodTypeChoice.add("AB-");
        bloodTypeChoice.add("O+");
        bloodTypeChoice.add("O-");

        civilStatusChoice.setBackground(new java.awt.Color(204, 204, 255));
        civilStatusChoice.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        civilStatusChoice.setEnabled(false);
        civilStatusChoice.add("Unspecified");
        civilStatusChoice.add("Single");
        civilStatusChoice.add("Married");
        civilStatusChoice.add("Divorced");
        civilStatusChoice.add("Widowed");

        civilStatusLabel.setText("Civil Status:");
        civilStatusLabel.setBackground(new java.awt.Color(255, 255, 255));
        civilStatusLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        employeePhoneNumberLabel.setText("Phone Number (09xx):");
        employeePhoneNumberLabel.setBackground(new java.awt.Color(255, 255, 255));
        employeePhoneNumberLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        fatherEmailAddressLabel.setText("Father's Email Address :");
        fatherEmailAddressLabel.setBackground(new java.awt.Color(255, 255, 255));
        fatherEmailAddressLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        fatherEmailAddressTf.setEditable(false);
        fatherEmailAddressTf.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        fatherEmailAddressTf.setBackground(new java.awt.Color(204, 204, 255));
        fatherEmailAddressTf.setToolTipText("");
        fatherEmailAddressTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fatherEmailAddressTfKeyPressed(evt);
            }
        });

        motherEmailAddressLabel.setText("Mother's Email Address :");
        motherEmailAddressLabel.setBackground(new java.awt.Color(255, 255, 255));
        motherEmailAddressLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        motherEmailAddressTf.setEditable(false);
        motherEmailAddressTf.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        motherEmailAddressTf.setBackground(new java.awt.Color(204, 204, 255));
        motherEmailAddressTf.setToolTipText("");
        motherEmailAddressTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                motherEmailAddressTfKeyPressed(evt);
            }
        });

        employeeImagePathLabel.setText("Employee Image:");
        employeeImagePathLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        selectImageButton.setText("Select Image");
        selectImageButton.setBackground(new java.awt.Color(255, 255, 255));
        selectImageButton.setEnabled(false);
        selectImageButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        selectImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectImageButtonActionPerformed(evt);
            }
        });

        imagePathLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        imagePathLabel.setText("image path");
        imagePathLabel.setBackground(new java.awt.Color(235, 241, 253));
        imagePathLabel.setFont(new java.awt.Font("Sylfaen", 0, 11)); // NOI18N
        imagePathLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        cancelButton.setText("Cancel (Esc)");
        cancelButton.setBackground(new java.awt.Color(255, 102, 102));
        cancelButton.setBorderPainted(false);
        cancelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        deleteEmployeeButton.setText("Delete Employee Account");
        deleteEmployeeButton.setBackground(new java.awt.Color(153, 153, 255));
        deleteEmployeeButton.setBorderPainted(false);
        deleteEmployeeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteEmployeeButton.setEnabled(false);
        deleteEmployeeButton.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        deleteEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEmployeeButtonActionPerformed(evt);
            }
        });

        bottomPanel.setBackground(new java.awt.Color(153, 153, 255));
        bottomPanel.setRequestFocusEnabled(false);

        dateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dateLabel.setText("Date");
        dateLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        dateLabel.setForeground(new java.awt.Color(255, 255, 255));
        dateLabel.setRequestFocusEnabled(false);

        timeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeLabel.setText("Time");
        timeLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        timeLabel.setForeground(new java.awt.Color(255, 255, 255));
        timeLabel.setRequestFocusEnabled(false);

        javax.swing.GroupLayout bottomPanelLayout = new javax.swing.GroupLayout(bottomPanel);
        bottomPanel.setLayout(bottomPanelLayout);
        bottomPanelLayout.setHorizontalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addContainerGap(704, Short.MAX_VALUE)
                .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        bottomPanelLayout.setVerticalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(timeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addComponent(dateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        resetAllFieldsButton.setText("Reset all fields");
        resetAllFieldsButton.setBackground(new java.awt.Color(153, 153, 255));
        resetAllFieldsButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        resetAllFieldsButton.setEnabled(false);
        resetAllFieldsButton.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        resetAllFieldsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetAllFieldsButtonActionPerformed(evt);
            }
        });

        onScreenKeyboardButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/healthMonitoringSystem/APP_IMAGES/mainprogram/onScreenKeyboard.png"))); // NOI18N
        onScreenKeyboardButton.setText("On-screen Keyboard");
        onScreenKeyboardButton.setBackground(new java.awt.Color(216, 219, 249));
        onScreenKeyboardButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        onScreenKeyboardButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        onScreenKeyboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onScreenKeyboardButtonActionPerformed(evt);
            }
        });

        employeeIDNumberLabel.setText("Employee ID:");
        employeeIDNumberLabel.setBackground(new java.awt.Color(255, 255, 255));
        employeeIDNumberLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        employeeIDNumberLabel.setForeground(new java.awt.Color(255, 51, 51));

        employeeIdTf.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        employeeIdTf.setBackground(new java.awt.Color(234, 234, 250));

        searchEmployeeButton.setText("Search Employee");
        searchEmployeeButton.setBackground(new java.awt.Color(153, 204, 255));
        searchEmployeeButton.setBorderPainted(false);
        searchEmployeeButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        searchEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchEmployeeButtonActionPerformed(evt);
            }
        });

        firstNameLabel.setText("First Name:");
        firstNameLabel.setBackground(new java.awt.Color(255, 255, 255));
        firstNameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        middleNameLabel.setText("Middle Name / Initial:");
        middleNameLabel.setBackground(new java.awt.Color(255, 255, 255));
        middleNameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lastNameLabel.setText("Last Name:");
        lastNameLabel.setBackground(new java.awt.Color(255, 255, 255));
        lastNameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        sexTf.setEditable(false);
        sexTf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sexTf.setBackground(new java.awt.Color(234, 234, 250));
        sexTf.setEnabled(false);
        sexTf.setFocusable(false);

        displayedBirthday.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        displayedBirthday.setText("Birthday");
        displayedBirthday.setBackground(new java.awt.Color(235, 241, 253));
        displayedBirthday.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        displayedBirthday.setRequestFocusEnabled(false);
        displayedBirthday.setToolTipText("Current birthday");

        javax.swing.GroupLayout topBannerPanelLayout = new javax.swing.GroupLayout(topBannerPanel);
        topBannerPanel.setLayout(topBannerPanelLayout);
        topBannerPanelLayout.setHorizontalGroup(
            topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topBannerPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(topBannerPanelLayout.createSequentialGroup()
                            .addComponent(onScreenKeyboardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(resetAllFieldsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(topBannerPanelLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(dateOfBirthLabel)
                                .addGap(18, 18, 18)
                                .addComponent(displayedBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topBannerPanelLayout.createSequentialGroup()
                                .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(nationalityLabel)
                                    .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(civilStatusLabel)
                                            .addComponent(bloodTypeLabel))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topBannerPanelLayout.createSequentialGroup()
                                            .addGap(25, 25, 25)
                                            .addComponent(religionLabel))))
                                .addGap(18, 18, 18)
                                .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nationalityTf)
                                    .addComponent(religionChoice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bloodTypeChoice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(civilStatusChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(topBannerPanelLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(sexLabel)
                        .addGap(18, 18, 18)
                        .addComponent(sexTf, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(deleteEmployeeButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(imagePathLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topBannerPanelLayout.createSequentialGroup()
                        .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(fatherEmailAddressLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(employeePhoneNumberLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(motherEmailAddressLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(employeeImagePathLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectImageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fatherEmailAddressTf, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(employeePhoneNumberTf, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(motherEmailAddressTf, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(28, 28, 28))
            .addGroup(topBannerPanelLayout.createSequentialGroup()
                .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(employeeRagistrationImageLabel)
                    .addComponent(bottomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(topBannerPanelLayout.createSequentialGroup()
                .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(topBannerPanelLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(employeeIDNumberLabel)
                        .addGap(18, 18, 18)
                        .addComponent(employeeIdTf, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(searchEmployeeButton))
                    .addGroup(topBannerPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(fullNameLabel)
                            .addComponent(homeAddressLabel))
                        .addGap(18, 18, 18)
                        .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(employeeHomeAddressTA_)
                            .addGroup(topBannerPanelLayout.createSequentialGroup()
                                .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(employeeFirstNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(firstNameLabel))
                                .addGap(18, 18, 18)
                                .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(employeeMiddleInitialTf, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(middleNameLabel))
                                .addGap(18, 18, 18)
                                .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lastNameLabel)
                                    .addComponent(employeeLastNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        topBannerPanelLayout.setVerticalGroup(
            topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topBannerPanelLayout.createSequentialGroup()
                .addComponent(employeeRagistrationImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(employeeIDNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(employeeIdTf, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchEmployeeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                    .addComponent(middleNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lastNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(2, 2, 2)
                .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(employeeMiddleInitialTf, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(employeeLastNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(employeeFirstNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fullNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(homeAddressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                    .addComponent(employeeHomeAddressTA_, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(topBannerPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(employeePhoneNumberTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(employeePhoneNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fatherEmailAddressTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fatherEmailAddressLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(motherEmailAddressTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(topBannerPanelLayout.createSequentialGroup()
                                .addComponent(motherEmailAddressLabel)
                                .addGap(18, 18, 18)
                                .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(employeeImagePathLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(selectImageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(4, 4, 4)
                        .addComponent(imagePathLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteEmployeeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(topBannerPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sexLabel)
                            .addComponent(sexTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateOfBirthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(displayedBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nationalityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nationalityTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(religionChoice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(religionLabel))
                        .addGap(9, 9, 9)
                        .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bloodTypeLabel)
                            .addComponent(bloodTypeChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(civilStatusLabel)
                            .addComponent(civilStatusChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(topBannerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(resetAllFieldsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(onScreenKeyboardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(19, 19, 19)
                .addComponent(bottomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(topBannerPanel, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void nationalityTfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nationalityTfKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            HMS_ADMINFORM showAdminForm = new HMS_ADMINFORM();
            showAdminForm.setVisible(true); 
            this.dispose();
        }
    }//GEN-LAST:event_nationalityTfKeyPressed

    private void employeePhoneNumberTfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_employeePhoneNumberTfKeyTyped
        // allow only numbers
        if (!Character.isDigit(evt.getKeyChar())) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_employeePhoneNumberTfKeyTyped

    private void employeePhoneNumberTfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_employeePhoneNumberTfKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            HMS_ADMINFORM showAdminForm = new HMS_ADMINFORM();
            showAdminForm.setVisible(true); 
            this.dispose();
        }
    }//GEN-LAST:event_employeePhoneNumberTfKeyPressed

    private void employeeHomeAddressTAKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_employeeHomeAddressTAKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            HMS_ADMINFORM showAdminForm = new HMS_ADMINFORM();
            showAdminForm.setVisible(true); 
            this.dispose();
        }
    }//GEN-LAST:event_employeeHomeAddressTAKeyPressed

    private void employeeFirstNameTfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_employeeFirstNameTfKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            HMS_ADMINFORM showAdminForm = new HMS_ADMINFORM();
            showAdminForm.setVisible(true); 
            this.dispose();
        }
    }//GEN-LAST:event_employeeFirstNameTfKeyPressed

    private void employeeMiddleInitialTfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_employeeMiddleInitialTfKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            HMS_ADMINFORM showAdminForm = new HMS_ADMINFORM();
            showAdminForm.setVisible(true); 
            this.dispose();
        }
    }//GEN-LAST:event_employeeMiddleInitialTfKeyPressed

    private void employeeLastNameTfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_employeeLastNameTfKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            HMS_ADMINFORM showAdminForm = new HMS_ADMINFORM();
            showAdminForm.setVisible(true); 
            this.dispose();
        }
    }//GEN-LAST:event_employeeLastNameTfKeyPressed

    private void fatherEmailAddressTfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fatherEmailAddressTfKeyPressed
           if (evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            HMS_ADMINFORM showAdminForm = new HMS_ADMINFORM();
            showAdminForm.setVisible(true); 
            this.dispose();
        }
    }//GEN-LAST:event_fatherEmailAddressTfKeyPressed

    private void motherEmailAddressTfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_motherEmailAddressTfKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE){
         HMS_ADMINFORM showAdminForm = new HMS_ADMINFORM();
         showAdminForm.setVisible(true); 
         this.dispose();
        }
    }//GEN-LAST:event_motherEmailAddressTfKeyPressed

    private void selectImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectImageButtonActionPerformed
        // select an image and set the image path into a JLabel
        String path = null;

        JFileChooser chooser = new JFileChooser();

        chooser.setCurrentDirectory(new File(System.getProperty("user.home")));

        // File extension
        FileNameExtensionFilter extension = new FileNameExtensionFilter("*Images","jpg","png","jpeg");
        chooser.addChoosableFileFilter(extension);

        int filestate = chooser.showSaveDialog(null);

        // Check if the user select an image
        if (filestate == JFileChooser.APPROVE_OPTION)
        {
            File selectedImage = chooser.getSelectedFile();
            path = selectedImage.getAbsolutePath();
            imagePathLabel.setText(path);
            image_path = path;
        }
    }//GEN-LAST:event_selectImageButtonActionPerformed
    HMS_EMPLOYEE_LIST employeeListForm = new HMS_EMPLOYEE_LIST();
    String username = "root";
    String password = "root";
    ResultSet rs;
    PreparedStatement pst;

    private void refreshTable() {
        try {
            Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/health_monitoring_system_database", username, password);
            String sql = "SELECT * FROM employees";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery(sql);
            employeeListForm.employeeListTable.setModel(DbUtils.resultSetToTableModel(rs));
            employeeListForm.employeeListTable.repaint();
            
            DefaultTableModel dm = (DefaultTableModel)employeeListForm.employeeListTable.getModel();
            dm.fireTableDataChanged(); // notifies the JTable that the model has changed
            employeeListForm.employeeListTable.repaint();
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);}
        }
    private void deleteEmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEmployeeButtonActionPerformed
        confirmPanel = new JPanel();
        confirmLabelText = new JLabel("Do you want to delete the employee profile?");
        confirmPanel.add(confirmLabelText);
        
        String[] options = new String[]{"BACK", "CONFIRM"};
          int option = JOptionPane.showOptionDialog(null, confirmPanel,"Confirm?",
              JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
              null, options, options[1]); // default selection
              if(option == 1) // pressing CONFIRM button
              {
                try {
                Class.forName("com.mysql.jdbc.Driver");
                String username = "root";
                String password = "root";
                Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/health_monitoring_system_database", username, password);

                String sql = "DELETE FROM employees WHERE employeeId = ?";
                PreparedStatement pstmt = conn.prepareStatement(sql);
                pstmt.setInt(1, Integer.parseInt(employeeIdTf.getText()));
                pstmt.executeUpdate();
                conn.close();
                employeeIDNumberLabel.setForeground(Color.red);
                employeeIdTf.setText("");
                employeeFirstNameTf.setText("");
                employeeMiddleInitialTf.setText("");
                employeeLastNameTf.setText("");
                employeeHomeAddressTA.setText("");
                employeePhoneNumberTf.setText("");
                displayedBirthday.setText("");
                nationalityTf.setText("");
                fatherEmailAddressTf.setText("");
                motherEmailAddressTf.setText("");
                religionChoice.select("Unspecified");
                bloodTypeChoice.select("Unspecified");
                civilStatusChoice.select("Unspecified");
                imagePathLabel.setText("image path");
                deleteEmployeeButton.setEnabled(false);
                selectImageButton.setEnabled(false);
                religionChoice.setEnabled(false);
                bloodTypeChoice.setEnabled(false);
                civilStatusChoice.setEnabled(false);
                this.repaint();
                refreshTable();
                JOptionPane.showMessageDialog(null, "The data is now deleted.");

                } catch (SQLException | ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }  
                
              }        
    }//GEN-LAST:event_deleteEmployeeButtonActionPerformed
 
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void employeePhoneNumberTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeePhoneNumberTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_employeePhoneNumberTfActionPerformed

    private void resetAllFieldsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetAllFieldsButtonActionPerformed
        employeeIDNumberLabel.setForeground(Color.red);
        employeeIdTf.setText("");
        employeeFirstNameTf.setText("");
        employeeMiddleInitialTf.setText("");
        employeeLastNameTf.setText("");
        employeeHomeAddressTA.setText("");
        employeePhoneNumberTf.setText("");
        nationalityTf.setText("");
        fatherEmailAddressTf.setText("");
        motherEmailAddressTf.setText("");
        religionChoice.select("Unspecified");
        bloodTypeChoice.select("Unspecified");
        civilStatusChoice.select("Unspecified");
        imagePathLabel.setText("image path");
        deleteEmployeeButton.setEnabled(false);
        selectImageButton.setEnabled(false);
        religionChoice.setEnabled(false);
        bloodTypeChoice.setEnabled(false);
        civilStatusChoice.setEnabled(false);
        this.repaint();
    }//GEN-LAST:event_resetAllFieldsButtonActionPerformed

    private void onScreenKeyboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onScreenKeyboardButtonActionPerformed
        try {
            Runtime.getRuntime().exec("cmd /c osk");
        } catch (IOException err) {
            System.out.println(err);
        }
    }//GEN-LAST:event_onScreenKeyboardButtonActionPerformed

    private void searchEmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchEmployeeButtonActionPerformed
        PreparedStatement pstmt;
        ResultSet rs;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String username = "root";
            String password = "root";
            // employeeID search
            try (Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/health_monitoring_system_database", username, password)) {
                // employeeID search
                String employeeID_sql = "SELECT * FROM employees WHERE employeeId = ?";
                pstmt = (PreparedStatement) conn.prepareStatement(employeeID_sql);
                pstmt.setInt(1, Integer.parseInt(employeeIdTf.getText()));
                
                rs = pstmt.executeQuery();
                if (rs.next())
                {
                    
                    employeeFirstNameTf.setText(rs.getString("firstName"));
                    employeeMiddleInitialTf.setText(rs.getString("middleInitial"));
                    employeeLastNameTf.setText(rs.getString("lastName"));
                    employeeHomeAddressTA.setText(rs.getString("employeeAddress"));
                    sexTf.setText(rs.getString("employeeGender"));
                    displayedBirthday.setText(rs.getString("dateOfBirth"));
                    nationalityTf.setText(rs.getString("employeeNationality"));
                    employeePhoneNumberTf.setText(rs.getString("cellphoneNumber"));
                    religionChoice.select(rs.getString("employeeReligion"));
                    bloodTypeChoice.select(rs.getString("employeeBloodType"));
                    civilStatusChoice.select(rs.getString("civilStatus"));
                    fatherEmailAddressTf.setText(rs.getString("fatherEmailAddress"));
                    motherEmailAddressTf.setText(rs.getString("motherEmailAddress"));
                    JOptionPane.showMessageDialog(null, "Review Profile Data.");
                    deleteEmployeeButton.setEnabled(true);
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Employee ID "+ employeeIdTf.getText() + " is not found in the System.");
                }
            }
        } catch (HeadlessException | ClassNotFoundException | NumberFormatException | SQLException ex) {
            JOptionPane.showMessageDialog(null, "Please Employee ID to Search.");
        }

    }//GEN-LAST:event_searchEmployeeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try { 
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | 
            InstantiationException | 
            IllegalAccessException | 
            UnsupportedLookAndFeelException e) {
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new HMS_EMPLOYEE_DELETE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Choice bloodTypeChoice;
    public javax.swing.JLabel bloodTypeLabel;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JButton cancelButton;
    private java.awt.Choice civilStatusChoice;
    public javax.swing.JLabel civilStatusLabel;
    private javax.swing.JLabel dateLabel;
    public javax.swing.JLabel dateOfBirthLabel;
    private javax.swing.JButton deleteEmployeeButton;
    private javax.swing.JLabel displayedBirthday;
    private javax.swing.JTextField employeeFirstNameTf;
    private javax.swing.JTextArea employeeHomeAddressTA;
    private javax.swing.JScrollPane employeeHomeAddressTA_;
    public javax.swing.JLabel employeeIDNumberLabel;
    private javax.swing.JTextField employeeIdTf;
    private javax.swing.JLabel employeeImagePathLabel;
    private javax.swing.JTextField employeeLastNameTf;
    private javax.swing.JTextField employeeMiddleInitialTf;
    public javax.swing.JLabel employeePhoneNumberLabel;
    private javax.swing.JTextField employeePhoneNumberTf;
    private javax.swing.JLabel employeeRagistrationImageLabel;
    public javax.swing.JLabel fatherEmailAddressLabel;
    private javax.swing.JTextField fatherEmailAddressTf;
    private javax.swing.Box.Filler filler1;
    public javax.swing.JLabel firstNameLabel;
    public javax.swing.JLabel fullNameLabel;
    public javax.swing.JLabel homeAddressLabel;
    private javax.swing.JLabel imagePathLabel;
    private javax.swing.JButton jButton1;
    public javax.swing.JLabel lastNameLabel;
    public javax.swing.JLabel middleNameLabel;
    public javax.swing.JLabel motherEmailAddressLabel;
    private javax.swing.JTextField motherEmailAddressTf;
    public javax.swing.JLabel nationalityLabel;
    private javax.swing.JTextField nationalityTf;
    private javax.swing.JButton onScreenKeyboardButton;
    private java.awt.Choice religionChoice;
    public javax.swing.JLabel religionLabel;
    private javax.swing.JButton resetAllFieldsButton;
    private javax.swing.JButton searchEmployeeButton;
    private javax.swing.JButton selectImageButton;
    public javax.swing.JLabel sexLabel;
    private javax.swing.JTextField sexTf;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JPanel topBannerPanel;
    // End of variables declaration//GEN-END:variables

}

