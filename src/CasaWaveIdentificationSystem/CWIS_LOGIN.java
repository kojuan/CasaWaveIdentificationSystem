package CasaWaveIdentificationSystem;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
// import javax.swing.SwingConstants; // center text/label

public final class CWIS_LOGIN extends javax.swing.JFrame {

    // Absolute =  Drive +  {folders(s)} + {file} | Uniform Naming Convention
    // Relative = No drive | ..\ one level up | ..\..\ two levels up
    final String currentAbsoluteFileDirectoryPath = System.getProperty("user.dir");

    public static JLabel passwordLabelText;
    public static JPanel passwordPanel;
    public static String username, password, query;

    /**
     * Creates new form BCLOGIN
     */
    public CWIS_LOGIN() {
        this.setBackground(Color.white); // default white background color.
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("HMS_LOGO_800PX.png")));
        initComponents();

        /* - Download The Connector For JAVA & MySQL Database 
         LINK: https://dev.mysql.com/downloads/connector/j/5.1.html */
        // OPEN XAMPP and Start Apache & MySQL
        // Go to : http://localhost/phpmyadmin and create a new database
        // Create a Connection with the database
        // center the form
        Border glob_panel_border = BorderFactory.createMatteBorder(1, 0, 0, 0, Color.blue);
        bottomPanel.setBorder(glob_panel_border);

        // create border for the username and password field
        Border textfields_panel_border = BorderFactory.createMatteBorder(1, 0, 1, 1, Color.blue);
        usernameTf.setBorder(textfields_panel_border);
        passwordTf.setBorder(textfields_panel_border);

        Border roundedBorder = new LineBorder(Color.blue, 1, true); // the third parameter - true, says it's round
        usernameTf.setBorder(roundedBorder);
        passwordTf.setBorder(roundedBorder);

        showDate();
        showTime();

        privacyPolicyLabel.setText("");
        privacyPolicyHideButton.setVisible(false);


    }

    void showDate() {
        Date date = new Date();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd");
        dateLabel.setText(simpleDateFormat.format(date));
    }

    void showTime() {
        new Timer(0, (ActionEvent e) -> {
            Date date = new Date();
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("hh:mm:ss a");
            timeLabel.setText(simpleDateFormat.format(date));
        }).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        loginButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        DATEANDTIME_PANEL = new javax.swing.JPanel();
        javax.swing.JLabel imageLabelTop = new javax.swing.JLabel();
        usernameTf = new javax.swing.JTextField();
        passwordTf = new javax.swing.JPasswordField();
        showCBox = new javax.swing.JCheckBox();
        sep1 = new javax.swing.JSeparator();
        sep2 = new javax.swing.JSeparator();
        userNameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        leftPanel = new javax.swing.JPanel();
        privacyPolicyLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        bottomPanel = new javax.swing.JPanel();
        javax.swing.JButton adminButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CASAWAVE IDENTIFICATION SYSTEM");
        setBackground(new java.awt.Color(118, 158, 203));
        setName("mainProgramFrame"); // NOI18N
        setUndecorated(true);
        setResizable(false);

        mainPanel.setBackground(new java.awt.Color(235, 241, 253));

        loginButton.setText("LOGIN (Enter)");
        loginButton.setBackground(new java.awt.Color(60, 143, 246));
        loginButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        loginButton.setBorderPainted(false);
        loginButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginButton.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        loginButton.setForeground(new java.awt.Color(204, 255, 255));
        loginButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        loginButton.setToolTipText("Log In");
        loginButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                loginButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                loginButtonMouseExited(evt);
            }
        });
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        loginButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loginButtonKeyPressed(evt);
            }
        });

        closeButton.setText("Close (Esc)");
        closeButton.setBackground(new java.awt.Color(255, 0, 102));
        closeButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        closeButton.setBorderPainted(false);
        closeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closeButton.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        closeButton.setForeground(new java.awt.Color(204, 255, 255));
        closeButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        closeButton.setToolTipText("Exit the application");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        DATEANDTIME_PANEL.setBackground(new java.awt.Color(235, 241, 253));
        DATEANDTIME_PANEL.setRequestFocusEnabled(false);

        javax.swing.GroupLayout DATEANDTIME_PANELLayout = new javax.swing.GroupLayout(DATEANDTIME_PANEL);
        DATEANDTIME_PANEL.setLayout(DATEANDTIME_PANELLayout);
        DATEANDTIME_PANELLayout.setHorizontalGroup(
            DATEANDTIME_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        DATEANDTIME_PANELLayout.setVerticalGroup(
            DATEANDTIME_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        imageLabelTop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CasaWaveIdentificationSystem/APP_IMAGES/mainprogram/CASAWAVE_TEXTHEADER.png"))); // NOI18N

        usernameTf.setBackground(new java.awt.Color(235, 241, 253));
        usernameTf.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        usernameTf.setBorder(null);
        usernameTf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                usernameTfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameTfFocusLost(evt);
            }
        });
        usernameTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                usernameTfKeyPressed(evt);
            }
        });

        passwordTf.setBackground(new java.awt.Color(235, 241, 253));
        passwordTf.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        passwordTf.setBorder(null);
        passwordTf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordTfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordTfFocusLost(evt);
            }
        });
        passwordTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTfActionPerformed(evt);
            }
        });
        passwordTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordTfKeyPressed(evt);
            }
        });

        showCBox.setBackground(new java.awt.Color(235, 241, 253));
        showCBox.setText("Show");
        showCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showCBoxActionPerformed(evt);
            }
        });

        sep1.setForeground(new java.awt.Color(60, 143, 246));

        sep2.setForeground(new java.awt.Color(60, 143, 246));

        userNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        userNameLabel.setForeground(new java.awt.Color(60, 143, 246));
        userNameLabel.setText("Username:");

        passwordLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        passwordLabel.setForeground(new java.awt.Color(60, 143, 246));
        passwordLabel.setText("Password:");

        leftPanel.setBackground(new java.awt.Color(235, 241, 253));
        leftPanel.setMaximumSize(new java.awt.Dimension(574, 0));

        privacyPolicyLabel.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        privacyPolicyLabel.setText("<html> <left> <b>Privacy Policy:</b><br> We, the CJJS Company of this Program informs you(as the user of this Program) of our policies regarding the collection, use and disclosure of Personal Information you will receive from patients in this Program.<br> By using this program, the personal data information of a Patient shall be kept and protected inside this program and the server database only. We use your Personal Information only for providing identification to co-workers and recognition as an Employee of the Hospital. <br><br> This Privacy Policy is effective as of November 07, 2020 and will remain in effect except with respect to any changes in its provisions in the future, which will be in effect immediately after being posted on this program. We reserve the right to update or change our Privacy Policy at any time and you should check this Privacy Policy periodically. Your continued use of the Service after we post any modifications to the Privacy Policy on this program will constitute your acknowledgment of the modifications and your consent to abide and be bound by the modified Privacy Policy. If we make any material changes to this Privacy Policy, we will notify you either through the email address you have provided us, or by placing a prominent notice on our website. <br> If you have any questions about this Privacy Policy, please contact your manager or the rightful owner of this Program. </left> </html>");

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(privacyPolicyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE))
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leftPanelLayout.createSequentialGroup()
                .addContainerGap(62, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(55, 55, 55)
                .addComponent(privacyPolicyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        dateLabel.setFont(new java.awt.Font("Century Gothic", 1, 38)); // NOI18N
        dateLabel.setForeground(new java.awt.Color(60, 175, 249));
        dateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dateLabel.setText("Date");
        dateLabel.setRequestFocusEnabled(false);

        timeLabel.setFont(new java.awt.Font("Century Gothic", 1, 33)); // NOI18N
        timeLabel.setForeground(new java.awt.Color(60, 175, 249));
        timeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeLabel.setText("Time");
        timeLabel.setRequestFocusEnabled(false);

        bottomPanel.setBackground(new java.awt.Color(153, 153, 255));
        bottomPanel.setRequestFocusEnabled(false);

        adminButton.setText("ADMIN");
        adminButton.setBackground(new java.awt.Color(153, 204, 255));
        adminButton.setBorder(new javax.swing.border.MatteBorder(null));
        adminButton.setBorderPainted(false);
        adminButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        adminButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        adminButton.setToolTipText("Administrator Access");
        adminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bottomPanelLayout = new javax.swing.GroupLayout(bottomPanel);
        bottomPanel.setLayout(bottomPanelLayout);
        bottomPanelLayout.setHorizontalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addComponent(adminButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(940, Short.MAX_VALUE))
        );
        bottomPanelLayout.setVerticalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(adminButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        privacyPolicyTriggerButton.setText("SHOW PRIVACY POLICY");
        privacyPolicyTriggerButton.setBackground(new java.awt.Color(153, 204, 255));
        privacyPolicyTriggerButton.setBorder(new javax.swing.border.MatteBorder(null));
        privacyPolicyTriggerButton.setBorderPainted(false);
        privacyPolicyTriggerButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        privacyPolicyTriggerButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        privacyPolicyTriggerButton.setToolTipText("Administrator Access");
        privacyPolicyTriggerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                privacyPolicyTriggerButtonActionPerformed(evt);
            }
        });

        privacyPolicyHideButton.setText("HIDE PRIVACY POLICY");
        privacyPolicyHideButton.setBackground(new java.awt.Color(153, 204, 255));
        privacyPolicyHideButton.setBorder(new javax.swing.border.MatteBorder(null));
        privacyPolicyHideButton.setBorderPainted(false);
        privacyPolicyHideButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        privacyPolicyHideButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        privacyPolicyHideButton.setToolTipText("Administrator Access");
        privacyPolicyHideButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                privacyPolicyHideButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(privacyPolicyTriggerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(privacyPolicyHideButton, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userNameLabel)
                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(usernameTf, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(sep1, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(mainPanelLayout.createSequentialGroup()
                                    .addComponent(passwordLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(showCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addComponent(sep2, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(passwordTf, javax.swing.GroupLayout.Alignment.TRAILING))))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(DATEANDTIME_PANEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(68, 68, 68)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(timeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(59, 59, 59))
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(imageLabelTop)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(bottomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(imageLabelTop)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(userNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(usernameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(sep1, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordLabel)
                            .addComponent(showCBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passwordTf, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sep2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DATEANDTIME_PANEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(timeLabel)))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(privacyPolicyTriggerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(privacyPolicyHideButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(bottomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1000, 614));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void passwordTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTfActionPerformed
        loginButton.doClick();
    }//GEN-LAST:event_passwordTfActionPerformed

    private void loginButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            JOptionPane.showMessageDialog(null, "Login success.");
        }
    }//GEN-LAST:event_loginButtonKeyPressed

    private void usernameTfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameTfKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            passwordTf.requestFocusInWindow();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            System.exit(0);
        }
    }//GEN-LAST:event_usernameTfKeyPressed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed

        PreparedStatement st;
        ResultSet rs;

        // get the username & password
        username = usernameTf.getText();
        password = String.valueOf(passwordTf.getPassword());
        //create a select query to check if the username and the password exist in the database
        query = "SELECT * FROM users WHERE usernameString = ? AND passwordString = ?";

        // Show a message if the username or the password fields are empty.
        if (username.trim().equals("username")) {
            JOptionPane.showMessageDialog(null, "Enter Your Username", "Blank Username or Password", 2);
        } else if (password.trim().equals("password")) {
            JOptionPane.showMessageDialog(null, "Enter Your Password", "Blank Username or Password", 2);
        } else {
            try {
                st = CASAWAVE_IDENTIFICATION_SYSTEM_DATABASE.getConnection().prepareStatement(query);

                st.setString(1, username);
                st.setString(2, password);
                rs = st.executeQuery();

                if (rs.next()) {
                    // show a new form
                    CWIS_MAIN openMain = new CWIS_MAIN();
                    openMain.setVisible(true);
//                 close the current form(login form)
                    this.dispose();

                } else {
                    // error message
                    JOptionPane.showMessageDialog(null, "Invalid Username or Password.\nPlease try again.", "Login Error", 2);
                }

            } catch (SQLException ex) {
                Logger.getLogger(CWIS_LOGIN.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "SQL Server Error.");
            }
        }


    }//GEN-LAST:event_loginButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_closeButtonActionPerformed

    private void passwordTfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTfFocusGained
        // clear the password field on focus if the text is "password"

        // get the password text
        String pass = String.valueOf(passwordTf.getPassword());
        if (pass.trim().toLowerCase().equals("password")) {
            passwordTf.setText("");
            passwordTf.setForeground(Color.black);
        }

        // set a yellow border to the Username Icon
        //Border password_icon = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.yellow);
        //passwordLabel.setBorder(password_icon);
    }//GEN-LAST:event_passwordTfFocusGained

    private void usernameTfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameTfFocusGained
        if (usernameTf.getText().trim().toLowerCase().equals("username")) {
            usernameTf.setText("");
            usernameTf.setForeground(Color.black);
        }
        // set a yellow border to the Username Icon
        //Border username_icon = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.yellow);
        //usernameLabel.setBorder(username_icon);
    }//GEN-LAST:event_usernameTfFocusGained

    private void usernameTfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameTfFocusLost
        /**
         * if the text field is equal to username or empty we will set the
         * "username" text in the field on focus lost event
         */
        if (usernameTf.getText().trim().equals("")
                || //placeholder
                usernameTf.getText().trim().toLowerCase().equals("username")) {
            usernameTf.setText("username");
            usernameTf.setForeground(new Color(153, 153, 153));
        }


    }//GEN-LAST:event_usernameTfFocusLost

    private void passwordTfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTfFocusLost
        /**
         * if the text field is equal to password or empty we will set the
         * "password" text in the field on focus lost event
         */
        // get password text
        String pass = String.valueOf(passwordTf.getPassword());
        if (pass.trim().equals("")
                || // placeholder
                pass.trim().toLowerCase().equals("password")) {
            passwordTf.setText("password");
            passwordTf.setForeground(new Color(153, 153, 153));
        }


    }//GEN-LAST:event_passwordTfFocusLost

    private void loginButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginButtonMouseEntered
        // set Login Button Background
        loginButton.setBackground(new Color(94, 126, 162));
    }//GEN-LAST:event_loginButtonMouseEntered

    private void loginButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginButtonMouseExited
        // set Login Button Background
        loginButton.setBackground(new Color(60, 143, 246));
    }//GEN-LAST:event_loginButtonMouseExited

    private void passwordTfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordTfKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            System.exit(0);
        }
    }//GEN-LAST:event_passwordTfKeyPressed

    private void showCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showCBoxActionPerformed
        if (showCBox.isSelected()) {
            passwordTf.setEchoChar((char) 0);
        } else {
            passwordTf.setEchoChar((char) 0x2022);
        }
    }//GEN-LAST:event_showCBoxActionPerformed

    private void adminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminButtonActionPerformed

        passwordPanel = new JPanel();
        passwordLabelText = new JLabel("Enter Special Code:");
        JPasswordField passwordField = new JPasswordField(10);
        passwordPanel.requestFocus();
        passwordField.requestFocusInWindow();
        passwordPanel.setBackground(new Color(0xccf5ff));

        passwordPanel.add(passwordLabelText);
        passwordPanel.add(passwordField);
        String[] options = new String[]{"CANCEL", "ACCESS"};
        int option = JOptionPane.showOptionDialog(null, passwordPanel, "Access Admin Tool",
                JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                null, options, options[1]); // default selection
        if (option == 1) // pressing ACCESS button
        {
            PreparedStatement st;
            ResultSet rs;
            // get the password
            String password = String.valueOf(passwordField.getPassword());
            //create a select query to check if the username and the password exist in the database
            String query = "SELECT * FROM adminspecialcode WHERE adminPassCodeNumber = ?";
            try {
                st = CASAWAVE_IDENTIFICATION_SYSTEM_DATABASE.getConnection().prepareStatement(query);
                st.setString(1, password);
                rs = st.executeQuery();

                if (rs.next()) {
                    CWIS_ADMINFORM adminForm = new CWIS_ADMINFORM();
                    adminForm.setVisible(true);
                    this.dispose();
                } else {
                    // error message
                    JOptionPane.showMessageDialog(null, "Invalid Special Code.\nPlease try again.", "Special Code Invalid", 2);
                }

            } catch (SQLException ex) {
                Logger.getLogger(CWIS_LOGIN.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "SQL Server Error. Please contact administrator.");
            }
        }
    }//GEN-LAST:event_adminButtonActionPerformed

    private void privacyPolicyTriggerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_privacyPolicyTriggerButtonActionPerformed
        privacyPolicyLabel.setText("<html>\n"
                + "<left>\n"
                + "<b>Privacy Policy:</b><br>\n"
                + "We, the CJJS Company of this Program informs you(as the user of this Program) of our policies regarding the collection, use and disclosure of Personal Information you will receive from patients in this Program.<br>\n"
                + "By using this program, the personal data information of a Patient shall be kept and protected inside this program and the server database only. We use your Personal Information only for providing identification to co-workers and recognition as an Employee of the Hospital. <br><br>\n"
                + "This Privacy Policy is effective as of November 07, 2020 and will remain in effect except with respect to any changes in its provisions in the future, which will be in effect immediately after being posted on this program. We reserve the right to update or change our Privacy Policy at any time and you should check this Privacy Policy periodically. Your continued use of the Service after we post any modifications to the Privacy Policy on this program will constitute your acknowledgment of the modifications and your consent to abide and be bound by the modified Privacy Policy.\n"
                + "If we make any material changes to this Privacy Policy, we will notify you either through the email\n"
                + "address you have provided us, or by placing a prominent notice on our website.\n"
                + "<br>\n"
                + "If you have any questions about this Privacy Policy, please contact your manager or the rightful owner of this Program.\n"
                + "</left>\n"
                + "</html>");
        privacyPolicyTriggerButton.setVisible(false);
        privacyPolicyHideButton.setVisible(true);

    }//GEN-LAST:event_privacyPolicyTriggerButtonActionPerformed

    private void privacyPolicyHideButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_privacyPolicyHideButtonActionPerformed
        privacyPolicyLabel.setText("");
        privacyPolicyTriggerButton.setVisible(true);
        privacyPolicyHideButton.setVisible(false);

    }//GEN-LAST:event_privacyPolicyHideButtonActionPerformed

    /**
     * @param args the command line arguments
     * @throws java.io.IOException
     */
    public static void main(String args[]) throws IOException {
        // sets the look and feel to be that of the operating system's
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException
                | UnsupportedLookAndFeelException e) {
            System.out.println(e + "\n The UI is not compatible for this Operating System. Please contact admin.");
        }

        // Absolute =  Drive +  {folders(s)} + {file} | Uniform Naming Convention
        // Relative = No drive | ..\ one level up | ..\..\ two levels up
        final String currentAbsoluteFileDirectoryPath = System.getProperty("user.dir");
        System.out.println("Current absolute path is:" + currentAbsoluteFileDirectoryPath);

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CWIS_LOGIN().setVisible(true);
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DATEANDTIME_PANEL;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel leftPanel;
    public javax.swing.JButton loginButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPasswordField passwordTf;
    private final javax.swing.JButton privacyPolicyHideButton = new javax.swing.JButton();
    public javax.swing.JLabel privacyPolicyLabel;
    private final javax.swing.JButton privacyPolicyTriggerButton = new javax.swing.JButton();
    private javax.swing.JSeparator sep1;
    private javax.swing.JSeparator sep2;
    private javax.swing.JCheckBox showCBox;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JLabel userNameLabel;
    public javax.swing.JTextField usernameTf;
    // End of variables declaration//GEN-END:variables

}
